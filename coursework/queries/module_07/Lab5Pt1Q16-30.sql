-- Create a special database to play in. Running this every time
-- can cause problems though...
-- USE master
-- GO
-- DROP DATABASE IF EXISTS TmpLab5;
-- CREATE DATABASE TmpLab5;

-- Question 16
USE TmpLab5;
DROP TABLE IF EXISTS [CUSTOMER];
CREATE TABLE [CUSTOMER](
	CUST_NUM INT IDENTITY(1000,1) NOT NULL,
	CUST_LNAME VARCHAR(30) NOT NULL,
	CUST_FNAME VARCHAR(30) NOT NULL,
	CUST_BALANCE DECIMAL(8,2) NOT NULL
);

-- Question 17
USE [TmpLab5]
DROP TABLE IF EXISTS [INVOICE];
CREATE TABLE [INVOICE](
	INV_NUM INT IDENTITY(8000,1) NOT NULL,
	CUST_NUM INT,
	INV_DATE DATETIME NOT NULL,
	INV_AMOUNT DECIMAL(10,2) NOT NULL
)

-- Question 18
INSERT INTO [CUSTOMER] (CUST_LNAME, CUST_FNAME, CUST_BALANCE)
	VALUES ('Smith', 'Jeanne', 1050.11);
INSERT INTO [CUSTOMER] (CUST_LNAME, CUST_FNAME, CUST_BALANCE)
	VALUES ('Ortega', 'Juan', 840.92);
SELECT * FROM [CUSTOMER];

-- Question 19
INSERT INTO [INVOICE] (CUST_NUM, INV_DATE, INV_AMOUNT)
	VALUES (1000, '2022-03-23', 235.89);
INSERT INTO [INVOICE] (CUST_NUM, INV_DATE, INV_AMOUNT)
	VALUES (1001, '2022-03-23', 312.82);
INSERT INTO [INVOICE] (CUST_NUM, INV_DATE, INV_AMOUNT)
	VALUES (1001, '2022-03-30', 528.10);
INSERT INTO [INVOICE] (CUST_NUM, INV_DATE, INV_AMOUNT)
	VALUES (1000, '2022-04-12', 194.78);
INSERT INTO [INVOICE] (CUST_NUM, INV_DATE, INV_AMOUNT)
	VALUES (1000, '2022-04-23', 619.44);
SELECT * FROM [INVOICE];

-- Question 22
INSERT INTO [CUSTOMER] (CUST_LNAME, CUST_FNAME, CUST_BALANCE)
	VALUES ('Powers', 'Ruth', 500);
SELECT * FROM [CUSTOMER];

-- Question 23
ALTER TABLE [CUSTOMER] ADD CUST_DOB DATETIME NULL;

-- Question 24
-- Note: Parser may claim CUST_DOB is not a valid column name, it should be fine though
UPDATE [CUSTOMER] SET CUST_DOB = '1989-03-05' WHERE CUST_NUM = 1000;

-- Question 25
UPDATE [CUSTOMER] SET CUST_DOB = '1988-12-22' WHERE CUST_NUM = 1001;
SELECT * FROM [CUSTOMER];

-- Question 26
USE [TmpLab5];
DROP TRIGGER IF EXISTS [trg_updatecustbalance]

GO
CREATE TRIGGER [trg_updatecustbalance] ON [INVOICE] FOR INSERT AS
	DECLARE @INV_NUM INT, @INV_CUST_NUM INT, @NEW_BALANCE DECIMAL(8,2), @OLD_BALANCE DECIMAL(8,2);

	SELECT
			@INV_NUM = [inserted].INV_NUM,
			@INV_CUST_NUM = [inserted].CUST_NUM,
			@OLD_BALANCE = [CUSTOMER].CUST_BALANCE,
			@NEW_BALANCE = [inserted].[INV_AMOUNT] + [CUSTOMER].CUST_BALANCE
		FROM [inserted], [CUSTOMER]
		WHERE [inserted].CUST_NUM = [CUSTOMER].CUST_NUM;
	
	UPDATE [CUSTOMER] SET CUST_BALANCE = @NEW_BALANCE WHERE CUST_NUM = @INV_CUST_NUM;

	PRINT
		'Creation of invoice "' + CAST(@INV_NUM AS CHAR) + '"' +
		' triggered update to customer number "' + CAST(@INV_CUST_NUM AS CHAR) + '". ' +
		'Balance increased from "' + CAST(@OLD_BALANCE AS CHAR) +
		'" to "' + CAST(@NEW_BALANCE AS CHAR) + '".';
GO

INSERT INTO [INVOICE] (CUST_NUM, INV_DATE, INV_AMOUNT)
	VALUES (1001, '2022-04-27', 225.40);

-- Question 27
DROP PROCEDURE IF EXISTS [prc_cust_add];

GO
CREATE PROCEDURE [prc_cust_add] AS
	INSERT INTO [CUSTOMER] (CUST_LNAME, CUST_FNAME, CUST_BALANCE)
		VALUES ('Rauthor', 'Peter', 0);
GO

EXEC [prc_cust_add];
SELECT * FROM [CUSTOMER];

-- Question 28
GO
CREATE PROCEDURE [prc_invoice_add] AS
	INSERT INTO [INVOICE] (CUST_NUM, INV_DATE, INV_AMOUNT)
		VALUES (1000, '2022-04-30', 301.72);
GO

EXEC [prc_invoice_add];
SELECT * FROM [INVOICE];

-- Question 29
USE [TmpLab5];
DROP TRIGGER IF EXISTS [trg_updatecustbalance]

GO
CREATE TRIGGER [trg_updatecustbalance2] ON [INVOICE] FOR DELETE AS
	DECLARE @INV_NUM INT, @INV_CUST_NUM INT, @NEW_BALANCE DECIMAL(8,2), @OLD_BALANCE DECIMAL(8,2);

	SELECT
			@INV_NUM = [deleted].INV_NUM,
			@INV_CUST_NUM = [deleted].CUST_NUM,
			@OLD_BALANCE = [CUSTOMER].CUST_BALANCE,
			@NEW_BALANCE = [CUSTOMER].CUST_BALANCE - [deleted].[INV_AMOUNT]
		FROM [deleted], [CUSTOMER]
		WHERE [deleted].CUST_NUM = [CUSTOMER].CUST_NUM;
	
	UPDATE [CUSTOMER] SET CUST_BALANCE = @NEW_BALANCE WHERE CUST_NUM = @INV_CUST_NUM;

	PRINT
		'Deletion of invoice "' + CAST(@INV_NUM AS CHAR) + '"' +
		' triggered update to customer number "' + CAST(@INV_CUST_NUM AS CHAR) + '". ' +
		'Balance decreased from "' + CAST(@OLD_BALANCE AS CHAR) +
		'" to "' + CAST(@NEW_BALANCE AS CHAR) + '".';
GO

-- Question 30
USE [TmpLab5];
DROP PROCEDURE IF EXISTS [prc_inv_delete];

GO
CREATE PROCEDURE [prc_inv_delete] @INV_NUM INT AS
	DELETE [INVOICE] WHERE INV_NUM = @INV_NUM;
GO

EXEC [prc_inv_delete] @INV_NUM = 8005;
EXEC [prc_inv_delete] @INV_NUM = 8006;
